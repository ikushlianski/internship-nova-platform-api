version: '3.9'
services:
  gateway:
    container_name: gateway
    build:
      target: ${NODE_ENV}
      context: .
      dockerfile: apps/gateway/Dockerfile
      args:
        - GATEWAY_PORT=${GATEWAY_PORT}
        - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
        - ENV_FILE=${ENV_FILE}
    env_file:
      - ${ENV_FILE}
    volumes:
      - .:/usr/src/server
    ports:
      - "${GATEWAY_PORT}:${GATEWAY_PORT}"
    command: npx nest start gateway --watch
    networks:
      - local
    depends_on:
      - database
  users:
    container_name: users
    env_file:
      - ${ENV_FILE}
    build:
      target: ${NODE_ENV}
      context: .
      dockerfile: apps/users/Dockerfile
      args:
        - USERS_SERVICE_PORT=${USERS_SERVICE_PORT}
        - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
        - ENV_FILE=${ENV_FILE}
    ports:
      - "${USERS_SERVICE_PORT}:${USERS_SERVICE_PORT}"
    volumes:
      - .:/usr/src/server
    command: npx nest start users --watch
    networks:
      - local
    depends_on:
      - database
  database:
    container_name: database
    restart: always
    image: postgres:16.3-alpine
    env_file:
      - ${ENV_FILE}
    healthcheck:
      test: "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "${DATABASE_PORT}:${DATABASE_PORT}"
    networks:
      - local
volumes:
  database:
    driver: local

networks:
  local:
    driver: bridge