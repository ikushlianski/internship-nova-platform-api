{{ $api_name := "pgadmin4"}}

apiVersion: apps/v1
kind: Deployment
metadata:
  # name: {{ include "nova-api.fullname" . }}
  name: {{ include "nova-api.fullname" . }}-{{ $api_name }}
  labels:
    {{- include "nova-api.labels" . | nindent 4 }}
    {{- include "nova-api.deploymentLabels" . | nindent 4 }}
    app: {{ include "nova-api.fullname" . }}-{{ $api_name }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      # {{- include "nova-api.selectorLabels" . | nindent 6 }}
      app: {{ include "nova-api.fullname" . }}-{{ $api_name }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "nova-api.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- include "nova-api.deploymentLabels" . | nindent 8 }}
        app: {{ include "nova-api.fullname" . }}-{{ $api_name }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "nova-api.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          # image: "{{ .Values.image_node.repository }}:{{ .Values.image_node.tag | default .Chart.AppVersion }}"
          image: dpage/pgadmin4:8.11
          imagePullPolicy: {{ .Values.image_node.pullPolicy }}
          # workingDir: {{ .Values.workingDir }}
          env:          
            - name: "PGADMIN_DEFAULT_EMAIL"
              valueFrom:
                secretKeyRef:
                  name: {{ include "nova-api.fullname" . }}-secrets
                  key: PGADMIN_DEFAULT_EMAIL
            - name: "PGADMIN_DEFAULT_PASSWORD"
              valueFrom:
                secretKeyRef:
                  name: {{ include "nova-api.fullname" . }}-secrets
                  key: PGADMIN_DEFAULT_PASSWORD
            - name: SCRIPT_NAME
              value: /pgadmin4
          volumeMounts:
          - name: pgadmin4-servers-volume
            mountPath: /pgadmin4/servers.json
            subPath: servers.json
          volumeMounts:
          - name: pgadmin4-servers-volume
            mountPath: /pgpass
            subPath: pgpass
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            null
          readinessProbe:
            null
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: pgadmin4-servers-volume
          configMap:
            name: {{ include "nova-api.fullname" . }}-{{ $api_name }}-configmap
            items:
            - key: servers.json
              path: servers.json
      volumes:
        - name: pgadmin4-pgpass-volume
          configMap:
            name: {{ include "nova-api.fullname" . }}-{{ $api_name }}-configmap
            items:
            - key: pgpass
              path: pgpass
            defaultMode: 384
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "nova-api.fullname" . }}-{{ $api_name }}-service
  labels:
    app: {{ include "nova-api.fullname" . }}-{{ $api_name }}
spec:
  type: {{ .Values.service.type }}
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
  selector:
    app: {{ include "nova-api.fullname" . }}-{{ $api_name }}

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ include "nova-api.fullname" . }}-{{ $api_name }}-ingress
  annotations:
    # nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  ingressClassName: nginx
  rules:
  - host: {{ .Values.application_environment }}.{{ .Values.domain_name }}
    http: &backend
      paths:
      - path: /pgadmin4
        pathType: Prefix
        backend:
          service:
            name: {{ include "nova-api.fullname" . }}-{{ $api_name }}-service
            port:
              number: 80
  - host: {{ .Values.application_environment }}.memo.{{ .Values.domain_name }}
    http: *backend
  - host: {{ .Values.application_environment }}.student.{{ .Values.domain_name }}
    http: *backend
  - host: {{ .Values.application_environment }}.admin.{{ .Values.domain_name }}
    http: *backend

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "nova-api.fullname" . }}-{{ $api_name }}-configmap
data:
  # /pgadmin4/servers.json
  servers.json: |
    {
        "Servers": {
            "postgres": {
                "Name": "Minimally Defined Server",
                "Group": "Server Group 1",
                "Port": 5432,
                "Username": "postgres",
                "PassFile": "/pgpass",
                "Host": "{{ include "nova-api.fullname" . }}-postgres-service.{{.Release.Namespace}}.svc.cluster.local",
                "SSLMode": "prefer",
                "MaintenanceDB": "postgres"
            }
        }
    }
  pgpass: |
   {{ include "nova-api.fullname" . }}-postgres-service.{{.Release.Namespace}}.svc.cluster.local:5432:nova-platform-main-db-dev:postgres:randompassword