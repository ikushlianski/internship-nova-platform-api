{{- if .Values.learning.create }}
{{- if .Values.serviceAccounts.create }}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ .Values.learning.name }}
  namespace: {{.Release.Namespace}}
  {{- with .Values.serviceAccounts.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
---
{{- end }}
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.learning.service.name }}
  namespace: {{ .Release.Namespace }}
  annotations:
    prometheus.io/scrape: "true"
spec:
  type: ClusterIP
  selector:
    app: {{ .Values.learning.name }}
  ports:
  - name: listener
    port: {{ .Values.learning.service.port }}
    targetPort: {{ .Values.learning.service.targetPort }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.learning.name }}
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.learning.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.learning.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.learning.name }}
    spec:
      {{- if .Values.serviceAccounts.create }}
      serviceAccountName: {{ .Values.learning.name }}
      {{- else }}
      serviceAccountName: default
      {{- end }}
      # terminationGracePeriodSeconds: 5
      # securityContext:
      #   fsGroup: 1000
      #   runAsGroup: 1000
      #   runAsNonRoot: true
      #   runAsUser: 1000
      imagePullSecrets:
      - name: regcred
      initContainers:
      - name: wait-for-rabbitmq
        image: alpine
        {{- with (index .Values.rabbitmq.service.ports 0) }}
        command: ["/bin/sh", "-c", "until nc -zv -w1 {{ $.Values.rabbitmq.service.name }} {{ .port }}; do sleep 2; done"]
        {{- end }}
      containers:
      - name: {{ .Values.learning.name }}
        # securityContext:
        #   runAsUser: 1000
        image: {{ .Values.images.repository }}/{{ .Values.learning.image.name }}:{{ .Values.learning.image.tag }}
        command: ["/bin/sh"]
        args: ["-c", "npx nest start learning --watch"]
        ports:
        - containerPort: {{ .Values.learning.service.targetPort }}
        env:          
        {{- range .Values.env }}
        - name: {{ .name }}
          value: "{{ .value }}"
        {{- end }}
        resources:
        #   {{- toYaml .Values.learning.resources | nindent 10 }}
{{- end }}
