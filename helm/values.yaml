# Default values for nova-api.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image_node:
  repository: node
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "20-alpine"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
# fsGroup: 2000

securityContext: {}
# capabilities:
#   drop:
#   - ALL
# readOnlyRootFilesystem: true
# runAsNonRoot: true
# runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
  # kubernetes.io/ingress.class: nginx
  # kubernetes.io/tls-acme: "true"
  hosts:
  - host: chart-example.local
    paths:
    - path: /
      pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
# We usually recommend not to specify default resources and to leave this as a conscious
# choice for the user. This also increases chances charts run on environments with little
# resources, such as Minikube. If you do want to specify resources, uncomment the following
# lines, adjust them as necessary, and remove the curly braces after 'resources:'.
# limits:
#   cpu: 100m
#   memory: 128Mi
# requests:
#   cpu: 100m
#   memory: 128Mi

# livenessProbe:
#   httpGet:
#     path: /
#     port: http
# readinessProbe:
#   httpGet:
#     path: /
#     port: http

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
# volumes: []
volumes:
- name: nova-api
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
# volumeMounts: []
volumeMounts:
- name: nova-api
  mountPath: "/usr/src/server"
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true
workingDir: "/usr/src/server"

nodeSelector: {}

tolerations: []

affinity: {}


env:
# - name: "DATABASE_URL"
#   value: "postgresql://johndoe:randompassword@localhost:5432/mydb?schema=public"
- name: "POSTGRES_PASSWORD"
  value: "randompassword"
- name: "POSTGRES_USER"
  value: "postgres"
- name: "DATABASE_PORT"
  value: "5432"
- name: "POSTGRES_DB"
  value: "nova-platform-main-db-dev"
- name: "APP_ENV"
  value: "dev"
- name: "NODE_ENV"
  value: "development"
- name: "FRONTEND_URL"
  value: "http://nova-front.nova-dev.svc.cluster.local/"
# - name: "GOOGLE_CALLBACK_URL"
#   value: "https://qa1.nova.local/api/v1/auth/google/callback"
- name: "GATEWAY_PORT"
  value: "80"
- name: "USER_SERVICE_PORT"
  value: "80"
- name: "ENV_FILE"
  value: ".env.development.local"







#########
application_environment: dev
domain_name: nova.local
build_hash: empty